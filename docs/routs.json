{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/register": {
            "post": {
                "summary": "Register",
                "description": "Регистрирует в БД нового пользователя со всеми полями, указанными при регистрации",
                "operationId": "register_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Login",
                "description": "Проверяет, существует ли пользователь с таким логином и паролем. Если да, возвращает токен для дальнейшего доступа",
                "operationId": "login_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/edit_profile": {
            "put": {
                "summary": "Edit Profile",
                "description": "Редактирует указанное поле в профиле пользователя, если такое есть",
                "operationId": "edit_profile_edit_profile_put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditProfileModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/delete_profile": {
            "delete": {
                "summary": "Delete Profile",
                "description": "Удаляет профиль пользователя",
                "operationId": "delete_profile_delete_profile_delete",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/decks/add": {
            "post": {
                "summary": "Create Deck",
                "description": "Создаёт новую колоду, принадлежащую данному пользователю",
                "operationId": "create_deck_decks_add_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeckData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/decks/get": {
            "get": {
                "summary": "Get Deck",
                "description": "Возвращает информацию о колоде по её ID в следующем формате:\n{\"creator\": \"userId\", \"name\": \"deckName\", \"description\": \"deckDescription\"}",
                "operationId": "get_deck_decks_get_get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetDeckById"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/decks/edit": {
            "put": {
                "summary": "Edit Deck",
                "description": "Редактирует указанное поле для колоды, если такое есть",
                "operationId": "edit_deck_decks_edit_put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditDeckModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/decks/remove": {
            "delete": {
                "summary": "Delete Deck",
                "description": "Удаляет колоду",
                "operationId": "delete_deck_decks_remove_delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteDeckModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/decks/show_users_decks": {
            "get": {
                "summary": "Get Decks",
                "description": "Возвращает все колоды данного пользователя в таком формате\n{\n    \"deckId\": {\n        \"creator\": \"userId\", \"name\": \"deckName\", \"description\": \"deckDescription\"\n    },\n    \"deckId2\": {\n        \"creator\": \"userId\", \"name\": \"deckName2\", \"description\": \"deckDescription2\"\n    },\n    ...\n }",
                "operationId": "get_decks_decks_show_users_decks_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/cards/add": {
            "post": {
                "summary": "Create Card",
                "description": "Создаёт новую карту в колоде пользователя",
                "operationId": "create_card_cards_add_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardData"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/cards/get": {
            "get": {
                "summary": "Get Deck",
                "description": "Возвращает информацию по карточке по её ID в следующем формате\n{\"english_word\": \"englishWord\", \"translation\": \"translation\", \"explanation\": \"explanation\",\n                        \"deck_id\": \"deckId\"}",
                "operationId": "get_deck_cards_get_get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetCardById"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/cards/edit": {
            "put": {
                "summary": "Edit Card",
                "description": "Редактирует поле для карточки в колоде, если такое поле есть",
                "operationId": "edit_card_cards_edit_put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditCardModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/cards/remove": {
            "delete": {
                "summary": "Delete Card",
                "description": "Удаляет карточку из колоды пользователя",
                "operationId": "delete_card_cards_remove_delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteCardModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/cards/show_decks_cards": {
            "get": {
                "summary": "Get Cards",
                "description": "Возвращает все карты в заданной колоде в формате\n{\n    \"cardId\": {\n        \"deck\": \"deckId\", \"english_word\": \"englishWord\", \"translation\": \"translation\", \"explanation\": \"explanation\"\n    },\n    \"cardId2\": {\n        \"deck\": \"deckId2\", \"english_word\": \"englishWord2\", \"translation\": \"translation2\", \"explanation\": \"explanation2\"\n    },\n    ...\n}",
                "operationId": "get_cards_cards_show_decks_cards_get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetDecksCards"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/statistics/new_game_results": {
            "post": {
                "summary": "New Game Results",
                "description": "Принимает результаты очередной игры и обновляет таблицу достижений пользователя",
                "operationId": "new_game_results_statistics_new_game_results_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameResults"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/statistics/for_today": {
            "get": {
                "summary": "Statistics For Today",
                "description": "Считает и отправляет статистику успехов пользователя за сегодня",
                "operationId": "statistics_for_today_statistics_for_today_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/statistics/for_week": {
            "get": {
                "summary": "Statistics For Week",
                "description": "Считает и отправляет статистику успехов пользователя за неделю",
                "operationId": "statistics_for_week_statistics_for_week_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/statistics/for_alltime": {
            "get": {
                "summary": "Statistics Alltime",
                "description": "Считает и отправляет статистику успехов пользователя за всё время",
                "operationId": "statistics_alltime_statistics_for_alltime_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/rankings/for_today": {
            "get": {
                "summary": "Rankings Today",
                "description": "Считает и отправляет топ пользователей за сегодня",
                "operationId": "rankings_today_rankings_for_today_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/rankings/for_week": {
            "get": {
                "summary": "Rankings Week",
                "description": "Считает и отправляет топ пользователей за неделю",
                "operationId": "rankings_week_rankings_for_week_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/rankings/for_alltime": {
            "get": {
                "summary": "Rankings Week",
                "description": "Считает и отправляет топ пользователей за всё время",
                "operationId": "rankings_week_rankings_for_alltime_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/generate/card": {
            "get": {
                "summary": "Generate Card",
                "description": "Генерирует карточку для данной колоды",
                "operationId": "generate_card_generate_card_get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Generate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/generate/deck": {
            "get": {
                "summary": "Generate Deck",
                "description": "Генерирует колоду для данного пользователя",
                "operationId": "generate_deck_generate_deck_get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Generate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/generate/image": {
            "get": {
                "summary": "Generate Image",
                "description": "Генерирует изображение для данной карточки",
                "operationId": "generate_image_generate_image_get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Generate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/generate/translation": {
            "get": {
                "summary": "Generate Translation",
                "description": "Генерирует перевод для данной карточки",
                "operationId": "generate_translation_generate_translation_get",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Generate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CardData": {
                "properties": {
                    "english_word": {
                        "type": "string",
                        "title": "English Word"
                    },
                    "translation": {
                        "type": "string",
                        "title": "Translation"
                    },
                    "explanation": {
                        "type": "string",
                        "title": "Explanation"
                    },
                    "deck_id": {
                        "type": "string",
                        "title": "Deck Id"
                    }
                },
                "type": "object",
                "required": [
                    "english_word",
                    "translation",
                    "explanation",
                    "deck_id"
                ],
                "title": "CardData"
            },
            "DeckData": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description"
                ],
                "title": "DeckData"
            },
            "DeleteCardModel": {
                "properties": {
                    "card_id": {
                        "type": "string",
                        "title": "Card Id"
                    },
                    "deck": {
                        "type": "string",
                        "title": "Deck"
                    }
                },
                "type": "object",
                "required": [
                    "card_id",
                    "deck"
                ],
                "title": "DeleteCardModel"
            },
            "DeleteDeckModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "DeleteDeckModel"
            },
            "EditCardModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "deck": {
                        "type": "string",
                        "title": "Deck"
                    },
                    "field_to_change": {
                        "type": "string",
                        "title": "Field To Change"
                    },
                    "new_value": {
                        "type": "string",
                        "title": "New Value"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "deck",
                    "field_to_change",
                    "new_value"
                ],
                "title": "EditCardModel"
            },
            "EditDeckModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "field_to_change": {
                        "type": "string",
                        "title": "Field To Change"
                    },
                    "new_value": {
                        "type": "string",
                        "title": "New Value"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "field_to_change",
                    "new_value"
                ],
                "title": "EditDeckModel"
            },
            "EditProfileModel": {
                "properties": {
                    "field_to_change": {
                        "type": "string",
                        "title": "Field To Change"
                    },
                    "new_value": {
                        "type": "string",
                        "title": "New Value"
                    }
                },
                "type": "object",
                "required": [
                    "field_to_change",
                    "new_value"
                ],
                "title": "EditProfileModel"
            },
            "GameResults": {
                "properties": {
                    "words_learned": {
                        "type": "integer",
                        "title": "Words Learned"
                    },
                    "decks_learned_fully": {
                        "type": "integer",
                        "title": "Decks Learned Fully"
                    },
                    "decks_learned_partly": {
                        "type": "integer",
                        "title": "Decks Learned Partly"
                    }
                },
                "type": "object",
                "required": [
                    "words_learned",
                    "decks_learned_fully",
                    "decks_learned_partly"
                ],
                "title": "GameResults"
            },
            "Generate": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "Generate"
            },
            "GetCardById": {
                "properties": {
                    "card_id": {
                        "type": "string",
                        "title": "Card Id"
                    },
                    "deck": {
                        "type": "string",
                        "title": "Deck"
                    }
                },
                "type": "object",
                "required": [
                    "card_id",
                    "deck"
                ],
                "title": "GetCardById"
            },
            "GetDeckById": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "GetDeckById"
            },
            "GetDecksCards": {
                "properties": {
                    "deck_id": {
                        "type": "string",
                        "title": "Deck Id"
                    }
                },
                "type": "object",
                "required": [
                    "deck_id"
                ],
                "title": "GetDecksCards"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "LoginModel": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "LoginModel"
            },
            "RegisterModel": {
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "phone": {
                        "type": "string",
                        "title": "Phone"
                    },
                    "country": {
                        "type": "string",
                        "title": "Country"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "password",
                    "email",
                    "phone",
                    "country"
                ],
                "title": "RegisterModel"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "token"
                    }
                }
            }
        }
    }
}